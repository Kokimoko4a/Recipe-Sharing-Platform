@using Microsoft.AspNetCore.Identity
@using RecipeSharingPlatform.Services.Data.Interfaces;
@using RecipeSharingPlatform.Web.Infrastructure.Extensions;
@using RecipesSharingPlatform.Data.Models;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IUserService UserService

@{
    string userName = await UserService.GetNameByEmailAsync(User.Identity?.Name!);
   

}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        Guid userId = Guid.Parse(User.GetId()!);
        
        <li class="nav-item">
                         <a class="nav-link text-dark" asp-controller="User" asp-action="ViewProfile" asp-route-id="@userId">Hello @userName</a>
        </li>
        <li class="nav-item">
            <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Login">Login</a>
            </li>
    }
</ul>
